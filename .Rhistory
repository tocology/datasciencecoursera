set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.send(1)
set.seed(1)
rpois(5,2)
?ppois
set.seed(100)
set.seed(10)
x <- rep(0:1, each=5)
x
getwd90
getwd()
setwd("~/datasciencecoursera/")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
outcome[,11]
names(outcome)
names(outcome)[11]
hist(as.numeric(outcome[,11]))
names(outcome)[7]
"TX" %in% outcome[,"State"]
!("TX" %in% outcome[,"State"])
outcome[,13]
head(outcome[,13])
names(outcome)[13]
min(outcome[,13])
head(outcome[outcome[,7]=="TX",])
tapply(outcome[,13], outcome[,7], min)
str(tapply(outcome[,13], outcome[,7], min))
return
return()
?error
best <- function(state, outcome){
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(!(state %in% data[,7])){ ## 7 indicate "State"
}
}
}
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(!(state %in% data[,7])){ ## 7 indicate "State"
}
}
best("BB", "hear attack")
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(!(state %in% data[,7])){ ## 7 indicate "State"
return("Error")
}
}
best("BB", "hear attack")
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(!(state %in% data[,7])){ ## 7 indicate "State"
print("Error")
return()
}
}
best("BB", "hear attack")
?stop
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(!(state %in% data[,7])){ ## 7 indicate "State"
stop("error")
}
}
best("BB", "hear attack")
all.types(13,15,17)
all.types <- c(13,15,17)
names(all.types) <- c("a","b","c")
all.types(a)
all.types["a"]
tapply(outcome[,13], outcome[,7], min)
tapply(outcome[,13], outcome[,7], min)["TX"]
outcome[outcome[,13]==tapply(outcome[,13], outcome[,7], min)["TX"],]
outcome[outcome[,13]==tapply(outcome[,13], outcome[,7], min)["TX"],][,2]
outcome[outcome[,13]==tapply(outcome[,13], outcome[,7], min)["TX"] && outcome[,7]=="TX",][,2]
outcome[outcome[,13]==tapply(outcome[,13], outcome[,7], min)["TX"] && outcome[,7]=="TX",]
outcome[(outcome[,13]==tapply(outcome[,13], outcome[,7], min)["TX"] && outcome[,7]=="TX"),]
outcome[outcome[,13]==tapply(outcome[,13], outcome[,7], min)["TX"] && outcome[,7]=="TX",]
View(outcome)
outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER"
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER",]
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER",][,13]
tapply(outcome$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, outcome$State, min)
tapply(outcome[,13], outcome$State, min)
min(outcome[outcome[,7]=="Tx",][,13])
min(outcome[outcome[,7]=="Tx",][,13], na.rm=TRUE)
min(outcome[outcome[,7]=="Tx",13], na.rm=TRUE)
min(outcome[outcome[,7]=="Tx",13])
min(outcome[outcome[,7]=="TX",13])
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER",][,13]
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER",][,7]
?slice
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(state %in% data[,"State"]){
# setting data
data <- subset(data, State == state)
data <- na.omit(data)
} else {
stop("invalid state")
}
if(outcome %in% c("heart attack", "heart failure", "pneumonia")){
# setting type of disease
type <- ifelse(outcome == "heart attack", 11, ifelse(outcome == "heart failure", 17, 23))
} else {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
data <- data[order(data[,type]), 2]
data[1]
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(state %in% data[,"State"]){
# setting data
data <- subset(data, State == state)
data <- na.omit(data)
} else {
stop("invalid state")
}
if(outcome %in% c("heart attack", "heart failure", "pneumonia")){
# setting type of disease
type <- ifelse(outcome == "heart attack", 11, ifelse(outcome == "heart failure", 17, 23))
} else {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
data <- data[order(data[,type], na.last=TRUE), 2]
data[1]
}
best("TX", "heart failure")
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(state %in% data[,"State"]){
# setting data
data <- subset(data, State == state)
data <- na.omit(data)
} else {
stop("invalid state")
}
if(outcome %in% c("heart attack", "heart failure", "pneumonia")){
# setting type of disease
type <- ifelse(outcome == "heart attack", 11, ifelse(outcome == "heart failure", 17, 23))
data[,type] <- as.numeric(data[,type])
} else {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
data <- data[order(data[,type], na.last=TRUE), 2]
data[1]
}
best("TX", "heart failure")
best <- function(state, outcome){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are vaild
if(state %in% data[,"State"]){
# setting data
data <- subset(data, State == state)
data <- na.omit(data)
} else {
stop("invalid state")
}
if(outcome %in% c("heart attack", "heart failure", "pneumonia")){
# setting type of disease
type <- ifelse(outcome == "heart attack", 11, ifelse(outcome == "heart failure", 17, 23))
data[,type] <- suppressWarnings(as.numeric(data[,type]))
} else {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
data <- data[order(data[,type], na.last=TRUE), 2]
data[1]
}
best("TX", "heart failure")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
